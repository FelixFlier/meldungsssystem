# docker-compose.yml
version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - /app/venv  # Verhindert, dass lokales venv in den Container gemountet wird
      - app_logs:/app/logs  # Speichert Logs in einem Volume
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/meldungssystem
      - SECRET_KEY=${SECRET_KEY:-supersecretkey}
      - DEBUG=False
      - SELENIUM_HEADLESS=False
    env_file:
      - .env.prod
    depends_on:
      - db
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-meldungssystem}
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./static:/usr/share/nginx/html/static
    depends_on:
      - app
    restart: always

volumes:
  postgres_data:
  app_logs: